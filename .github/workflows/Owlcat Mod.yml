# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps

name: Owlcat Mod

on:
  push:
    tags:        
      - '**'           # Push events to every tag not containing /
  pull_request_target:
      types: [labeled]

env:
  GAMENAME: "Wrath"
  GITHUB_NAME: "xADDBx"
  PACKAGE_LINK: "https://nuget.pkg.github.com/xADDBx/index.json"
  PACKAGE_NAME: "WrathGameAssemblies"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  build:
    if: ${{ startsWith(github.ref, 'refs/tags/') || contains(github.event.pull_request.labels.*.name, 'safe to test') }}
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2
      
    - name: Add NuGet package source from GitHub
      run: dotnet nuget add source $PACKAGE_LINK --username $GITHUB_NAME --password GITHUB_TOKEN --name github --store-password-in-clear-text  

    - name: Install NuGet package
      run: dotnet nuget install $PACKAGE_NAME -s $PACKAGE_LINK -o GameFiles

    - name: Restore the application
      run: msbuild /t:Build /p:Configuration=Build /p:$(GAMENAME)Data=GameFiles\UserDataDir /p:$(GAMENAME)InstallDir=GameFiles\Assemblies -o Out

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Build Files
        path: Out
